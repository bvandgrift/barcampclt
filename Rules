#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require 'compass'
Compass.add_project_configuration 'config.rb'

HAML_OPTIONS = {
  :escape_html => false,
  :ugly => false,
  :format => :html5
}

# ----------------------------------------------------------------------
# preprocess rules
# ----------------------------------------------------------------------
preprocess do
  # authors may unpublish items by setting meta attribute publish: false
  # ex: @item:publish = false
  items.delete_if { |item| item[:publish] == false }
  
  # copy the /pres dir & it's assets over to /output
  copy_pres
end

# ----------------------------------------------------------------------
# compile rules
# ----------------------------------------------------------------------
# compiles the barcamp iv site for posterity
compile 'iv/*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last
  
  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext.nil?
    filter :haml, HAML_OPTIONS
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :kramdown
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end
  
  layout '_iv/default' unless item[:layout] == "none"
end

# compiles the current site (or anything not outlined above in any rules)
compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last
  
  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext == 'html' || ext.nil?
    filter :erb
    filter :haml, HAML_OPTIONS
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :kramdown
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end
  
  layout 'default' unless item[:layout] == "none"
end

layout '*', :haml, HAML_OPTIONS

# ----------------------------------------------------------------------
# route rules
# ----------------------------------------------------------------------
# rips off the haml tag and switches it to .html
route '*' do
  item.identifier + 'index.html'
end


